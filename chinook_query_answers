Provide one or more Active Record queries that retrieve the requested data for each of the following:

1.    Find the albums recorded by the artist Queen.

    --  Artist.find_by name: 'Queen'
    --  Album.where artist_id: 51

2.    Count how many tracks belong to the media type "Protected MPEG-4 video file".

    --  MediaType.where name: 'Protected MPEG-4 video file'
    --  Track.where(media_type_id: 3).count

3.    Find the genre with the name "Hip Hop/Rap".

    --  Genre.find_by name: 'Hip Hop/Rap'    id: 17

4.    Count how many tracks belong to the "Hip Hop/Rap" genre

    --  Track.where(genre_id: 17).count    last id = 35

5.    Find the total amount of time required to listen to all the tracks in the database.

    --  Track.sum("milliseconds")     22,976.26378333 minutes (I converted milliseconds to minutes)

6.    Find the highest price of any track that has the media type "MPEG audio file".

    --  Track.maximum("unit_price")

7.    Find the name of the most expensive track that has the media type "MPEG audio file".

    --  MediaType.where name: 'MPEG audio file'     id: 1
    --  Track.where(media_type_id: 1).order(unit_price: :desc).limit(1)
        OR
    --  Track.where(media_type_id: 1).order(unit_price: :desc).first
        OR
    --  Track.where(media_type_id: 1).order(unit_price: :asc).last

8.    Find the 2 oldest artists.

    -- Arist.order(created_at: :asc):limit(2)

9.    Find the least expensive track that has the genre "Electronica/Dance".

    -- Genre.where(name: 'Electronica/Dance')    genre_id: 15
    -- Track.where(genre_id: 15).order(unit_price: :asc).first

10.   Find all "MPEG autio file" tracks in the genre "Electronica/Dance".

    --  Track.where(genre_id: 15).where(media_type_id: 1)
